#summary Padrões de desenvolvimento de Classes Javascript para a LIM

= Introdução = 
Para a construção de Classes para LIM, é necessário seguir alguns padrões clássicos de desenvolvimento e boas práticas:
 * A Classe sempre deve fazer parte do objeto "namespace" {{{lim}}}
 * A Classe deve estar "encapsulada" no padrão [http://jibbering.com/faq/notes/closures/ Javascript Closures]
 * Documentação do código (quando necessária) utilizando [http://code.google.com/p/jsdoc-toolkit/w/list JSDoc]
 * Sempre que possível, validar a Classe no [http://www.jslint.com/ JSLint]
 * Se for permitido *e* necessário a utlização de alguma biblioteca Javascript externa, utilize [http://jquery.com jQuery] 1.4.2

= Convenção de sintaxe Javascript =
 # Todas as Classes e métodos devem seguir o padrão [http://pt.wikipedia.org/wiki/CamelCase CamelCase]. Classes, obviamente, devem começar com a prileira letra maiúscula e métodos minúscula;
 # Constantes devem ser escrica em caixa alta;
 # Variáveis ou métodos privados ou "protegidos" devem começar com {{{_}}} (underline);
 # Parâmetros recebidos por uma função ou método devem começar com {{{p_}}};

== Exemplo ==
{{{
var Test = function(p_some) { // Classe
	
	this.CONSTANT = 'constante';
	
	var _privateVar = 'variável privada';
	
	this.publicVar = 'variável pública';
	
	this._protectedVar = 'variável protegida';
	
	this.publicMethod = function(p_thing) {
		// Método público
	};
	
};
var newTest = new Test();
}}} 

= Classe Modelo =
{{{
/**
 * Nome da Classe
 * Breve descrição do que a Classe faz em Português
 * 
 * @author Autor 1
 * @author Autor 2 ...
 * @version 0.0.0
 * @requires NomeDasOutrasClassesNecessaria1 NomeDasOutrasClassesNecessaria2
*/

if(!window['lim']){
	var lim = {};
}
(function(namespace, ...){
	
	var StaticName = {
		VERSION: '0.0.0',
		
		Class: function () { 
			
		}
	}
	
	// Dynamic Class
	namespace.StaticName = new StaticName.Class();
	
	// Static Class
	namespace.StaticName = new StaticName.Class;
	namespace.StaticName.Class = StaticName.Class;
	
	
})(lim, ...);
}}}