#summary Padrões de marcação HTML para projetos LIM

=Introdução=

Todo o código HTML deve ser testado e estar 100% [http://validator.w3.org/ válido segundo os padrões W3C]. Tão importante quanto a validação do código é garantir a compatibilidade _Cross-Browser_.

Mesmo sabendo dos bugs e problemas do IE6, ele ainda é o navegador padrão de uma parcela significativa dos usuários brasileiros (dados de maio de 2010). Dito isso é necessário se certificar de que TODAS as partes do site funcionem da mesma forma para os seguintes navegadores:

    * IE6, IE7 e IE8;
    * Firefox 3.5 +;
    * Safari (última versão estável, nada de _beta_);
    * Google Chrome (última versão estável, nada de _beta_);

Garantindo essa compatibilidade é bem provável que ele tenha um ótimo desempenho no Opera e outros.

== Padrões HTML ==
 * Muito se fala sobre o [http://dev.w3.org/html5/spec/Overview.html HTML5] mas com as espectativas do _Final Draft_ para *2010* e da versão final para *[http://ishtml5readyyet.com/ 2022]* , recomendamos utilizar *Doctype XHTML 1.0 Transitional*;
{{{
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
}}}
 * Programar o site de forma [http://pt.wikipedia.org/wiki/Tableless "Tableless"]. Tabelas devem ser usadas para apresentar dados tabulares e só!
 * Escrever um [http://www.kadunew.com/blog/xhtml/a-importancia-do-html-semantico código HTML semântico];
 * Todas as páginas devem ter a tag {{{title}}} customizadas;
 * Os {{{hn}}} (títulos) devem seguir a hierarquia de headings:
{{{
h1
|__h2
|   |__h3
|   |__h3
|__h2
|
|__ h2
|   |__h3
|       |__h4
|
|__...
}}}
 * Toda página deve ter o seu próprio {{{h1}}} com seu respectivo título.
 * Todas as imagens devem ter o atributo {{{alt}}} preenchido corretamente;
 * Usar as tags {{{label}}} com o atributo {{{for}}} preenchidos corretamente para campos de formulário;
{{{
<label for="stNome">Nome</label>
<input type="text" id="stNome" name="stNome" />
}}}

== O que NÃO fazer ==
 * Nunca misturar a camada de apresentação com a camada de conteúdo. Toda a formatação e estilização do código deve ser feito via CSS.
 * Não utilizar _styles inline_. Ex.: {{{style="background:red;"}}};
 * Não usar as propriedades {{{width}}} e {{{height}}} para imagens;