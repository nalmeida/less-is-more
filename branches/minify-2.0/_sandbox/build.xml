<?xml version="1.0" encoding="UTF-8"?>
<project name="lessIsMore" default="build" basedir=".">
	
	<!-- 
		To call predefined languages / configuration files, define the variable:
		
		ant -Dconfig.name=[TEMPLATE_NAME]
		
		Then, the files will be called as:
		
		config/[TEMPLATE_NAME].xml
		builder/build-[TEMPLATE_NAME].xml
		
		OR it will accept a "array" of config files that will be executed in order:
		
		ant -Dconfig.name=[TEMPLATE_NAME1],[TEMPLATE_NAME2],[TEMPLATE_NAME3]...
		
		config/[TEMPLATE_NAME1].xml
		config/[TEMPLATE_NAME2].xml
		config/[TEMPLATE_NAME3].xml
		builder/build-[TEMPLATE_NAME1].xml
		builder/build-[TEMPLATE_NAME2].xml
		builder/build-[TEMPLATE_NAME3].xml
		(...)
 	-->
	
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${basedir}/builder/lib/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>
	
	<property name="dir.classpath" value="${basedir}/builder" />
	<import file="${dir.classpath}/config/common.xml" />

	<!-- load config file -->
	<for list="${config.name}" param="curr.config.name">
		<sequential>
			<property name="config.@{curr.config.name}" value="${dir.classpath}/config/@{curr.config.name}.xml" />
			<available property="has.config.@{curr.config.name}" file="${config.@{curr.config.name}}" />
			<if>
				<equals arg1="${has.config.@{curr.config.name}}" arg2="true" />
				<then>
					<echo>[build.xml] Import config file: "${config.@{curr.config.name}}"</echo>
					<import file="${config.@{curr.config.name}}" />
				</then>
			</if>
		</sequential>
	</for>
	<for list="${file.custom-config}" param="curr.custom-config">
		<sequential>
			<property name="config.@{curr.custom-config}" value="@{curr.custom-config}" />
			<available property="has.config.@{curr.custom-config}" file="${config.@{curr.custom-config}}" />
			<if>
				<equals arg1="${has.config.@{curr.custom-config}}" arg2="true" />
				<then>
					<echo>[build.xml] Import custom config file: "${config.@{curr.config.name}}"</echo>
					<import file="${config.@{curr.custom-config}}" />
				</then>
			</if>
		</sequential>
	</for>
	
	<!-- load builders -->
	<for list="${config.name}" param="curr.config.name">
		<sequential>
			<property name="build.@{curr.config.name}" value="${dir.classpath}/build-${config.name}.xml" />
			<available property="has.build.@{curr.config.name}" file="${build.@{curr.config.name}}" />
			<if>
				<equals arg1="${has.build.@{curr.config.name}}" arg2="true" />
				<then>
					<echo>[build.xml] Import build file: "${build.@{curr.config.name}}"</echo>
					<import file="${build.@{curr.config.name}}" />
				</then>
			</if>
		</sequential>
	</for>
	<for list="${file.custom-build}" param="curr.custom-build">
		<sequential>
			<property name="build.@{curr.custom-build}" value="@{curr.custom-build}" />
			<available property="has.build.@{curr.custom-build}" file="${build.@{curr.custom-build}}" />
			<if>
				<equals arg1="${has.build.@{curr.custom-build}}" arg2="true" />
				<then>
					<echo>[build.xml] Import custom build file: "${build.@{curr.custom-build}}"</echo>
					<import file="${build.@{curr.custom-build}}" />
				</then>
			</if>
		</sequential>
	</for>
	<import file="${dir.classpath}/build-common.xml" />
	
	
	<!-- constructor -->
	<target name="build" depends="init">
		<echo>[build.xml] Compiling source files present in ${dir.src} to ${dir.destination}</echo>
	</target>
	
</project>



